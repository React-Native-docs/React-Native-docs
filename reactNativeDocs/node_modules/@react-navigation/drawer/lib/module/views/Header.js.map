{"version":3,"sources":["Header.tsx"],"names":["React","Text","View","Image","StyleSheet","Platform","useSafeAreaInsets","DrawerActions","useTheme","TouchableItem","getDefaultHeaderHeight","layout","statusBarHeight","isLandscape","width","height","headerHeight","OS","isPad","HeaderSegment","scene","insets","colors","title","headerTitle","headerTitleAlign","select","ios","default","headerLeft","headerLeftAccessibilityLabel","headerRight","headerTitleAllowFontScaling","headerTitleStyle","headerTintColor","headerPressColorAndroid","headerStyle","headerStatusBarHeight","top","descriptor","options","currentTitle","undefined","route","name","defaultHeight","leftButton","tintColor","navigation","dispatch","toggleDrawer","styles","touchable","right","bottom","left","icon","require","rightButton","backgroundColor","card","borderBottomColor","border","shadowColor","container","content","position","marginHorizontal","Math","max","children","allowFontScaling","style","color","text","create","android","elevation","shadowOpacity","shadowRadius","shadowOffset","hairlineWidth","borderBottomWidth","zIndex","flex","flexDirection","alignItems","justifyContent","fontSize","fontWeight","fontFamily","margin","resizeMode"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Text, View, Image, StyleSheet, Platform } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { DrawerActions, useTheme } from '@react-navigation/native';\nimport TouchableItem from './TouchableItem';\nimport type { Layout, DrawerHeaderProps } from '../types';\n\nexport const getDefaultHeaderHeight = (\n  layout: Layout,\n  statusBarHeight: number\n): number => {\n  const isLandscape = layout.width > layout.height;\n\n  let headerHeight;\n\n  if (Platform.OS === 'ios') {\n    if (isLandscape && !Platform.isPad) {\n      headerHeight = 32;\n    } else {\n      headerHeight = 44;\n    }\n  } else if (Platform.OS === 'android') {\n    headerHeight = 56;\n  } else {\n    headerHeight = 64;\n  }\n\n  return headerHeight + statusBarHeight;\n};\n\nexport default function HeaderSegment({ scene, layout }: DrawerHeaderProps) {\n  const insets = useSafeAreaInsets();\n  const { colors } = useTheme();\n\n  const {\n    title,\n    headerTitle,\n    headerTitleAlign = Platform.select({\n      ios: 'center',\n      default: 'left',\n    }),\n    headerLeft,\n    headerLeftAccessibilityLabel,\n    headerRight,\n    headerTitleAllowFontScaling,\n    headerTitleStyle,\n    headerTintColor,\n    headerPressColorAndroid,\n    headerStyle,\n    headerStatusBarHeight = insets.top,\n  } = scene.descriptor.options;\n\n  const currentTitle =\n    typeof headerTitle !== 'function' && headerTitle !== undefined\n      ? headerTitle\n      : title !== undefined\n      ? title\n      : scene.route.name;\n\n  const defaultHeight = getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n  const leftButton = headerLeft ? (\n    headerLeft({ tintColor: headerTintColor })\n  ) : (\n    <TouchableItem\n      accessible\n      accessibilityRole=\"button\"\n      accessibilityComponentType=\"button\"\n      accessibilityLabel={headerLeftAccessibilityLabel}\n      accessibilityTraits=\"button\"\n      delayPressIn={0}\n      onPress={() =>\n        scene.descriptor.navigation.dispatch(DrawerActions.toggleDrawer())\n      }\n      style={styles.touchable}\n      pressColor={headerPressColorAndroid}\n      hitSlop={Platform.select({\n        ios: undefined,\n        default: { top: 16, right: 16, bottom: 16, left: 16 },\n      })}\n      borderless\n    >\n      <Image\n        style={[\n          styles.icon,\n          headerTintColor ? { tintColor: headerTintColor } : null,\n        ]}\n        source={require('./assets/toggle-drawer-icon.png')}\n        fadeDuration={0}\n      />\n    </TouchableItem>\n  );\n  const rightButton = headerRight\n    ? headerRight({ tintColor: headerTintColor })\n    : null;\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[\n        {\n          height: defaultHeight,\n          backgroundColor: colors.card,\n          borderBottomColor: colors.border,\n          shadowColor: colors.border,\n        },\n        styles.container,\n        headerStyle,\n      ]}\n    >\n      <View pointerEvents=\"none\" style={{ height: headerStatusBarHeight }} />\n      <View pointerEvents=\"box-none\" style={styles.content}>\n        {leftButton ? (\n          <View\n            pointerEvents=\"box-none\"\n            style={[styles.left, { left: insets.left }]}\n          >\n            {leftButton}\n          </View>\n        ) : null}\n        <View\n          pointerEvents=\"box-none\"\n          style={[\n            headerTitleAlign === 'left'\n              ? {\n                  position: 'absolute',\n                  left: (leftButton ? 72 : 16) + insets.left,\n                  right: (rightButton ? 72 : 16) + insets.right,\n                }\n              : {\n                  marginHorizontal:\n                    (leftButton ? 32 : 16) +\n                    Math.max(insets.left, insets.right),\n                },\n          ]}\n        >\n          {typeof headerTitle === 'function' ? (\n            headerTitle({\n              children: currentTitle,\n              allowFontScaling: headerTitleAllowFontScaling,\n              tintColor: headerTintColor,\n              style: headerTitleStyle,\n            })\n          ) : (\n            <Text\n              accessibilityRole=\"header\"\n              aria-level=\"1\"\n              numberOfLines={1}\n              allowFontScaling={headerTitleAllowFontScaling}\n              style={[\n                styles.title,\n                { color: headerTintColor ?? colors.text },\n                styles.title,\n                headerTitleStyle,\n              ]}\n            >\n              {currentTitle}\n            </Text>\n          )}\n        </View>\n        {rightButton ? (\n          <View\n            pointerEvents=\"box-none\"\n            style={[styles.right, { right: insets.right }]}\n          >\n            {rightButton}\n          </View>\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    ...Platform.select({\n      android: {\n        elevation: 4,\n      },\n      ios: {\n        shadowOpacity: 0.85,\n        shadowRadius: 0,\n        shadowOffset: {\n          width: 0,\n          height: StyleSheet.hairlineWidth,\n        },\n      },\n      default: {\n        borderBottomWidth: StyleSheet.hairlineWidth,\n      },\n    }),\n    zIndex: 1,\n  },\n  content: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n  icon: {\n    height: 24,\n    width: 24,\n    margin: 3,\n    resizeMode: 'contain',\n  },\n  touchable: {\n    marginHorizontal: 11,\n  },\n  left: {\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-start',\n  },\n  right: {\n    position: 'absolute',\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n  },\n});\n"]}