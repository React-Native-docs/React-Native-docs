{"version":3,"sources":["ResourceSavingScene.tsx"],"names":["React","Platform","StyleSheet","View","Screen","screensEnabled","shouldUseActivityState","FAR_FAR_AWAY","ResourceSavingScene","isVisible","children","style","rest","OS","display","styles","container","attached","detached","create","flex","top"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,UAAnB,EAA+BC,IAA/B,QAA2C,cAA3C;AACA,SACEC,MADF,EAEEC,cAFF,CAGE;AAHF,EAIEC,sBAJF,QAKO,sBALP;AAcA,MAAMC,YAAY,GAAG,KAArB,C,CAA4B;;AAE5B,eAAe,SAASC,mBAAT,CAA6B;AAC1CC,EAAAA,SAD0C;AAE1CC,EAAAA,QAF0C;AAG1CC,EAAAA,KAH0C;AAI1C,KAAGC;AAJuC,CAA7B,EAKL;AACR;AACA,MAAIP,cAAc,SAAd,IAAAA,cAAc,WAAd,IAAAA,cAAc,MAAQJ,QAAQ,CAACY,EAAT,KAAgB,KAA1C,EAAiD;AAC/C,QAAIP,sBAAJ,EAA4B;AAC1B;AAAA;AACE;AACA,4BAAC,MAAD;AAAQ,UAAA,aAAa,EAAEG,SAAS,GAAG,CAAH,GAAO,CAAvC;AAA0C,UAAA,KAAK,EAAEE;AAAjD,WAA4DC,IAA5D,GACGF,QADH;AAFF;AAMD,KAPD,MAOO;AACL;AAAA;AACE;AACA,4BAAC,MAAD;AAAQ,UAAA,MAAM,EAAED,SAAS,GAAG,CAAH,GAAO,CAAhC;AAAmC,UAAA,KAAK,EAAEE;AAA1C,WAAqDC,IAArD,GACGF,QADH;AAFF;AAMD;AACF;;AAED,MAAIT,QAAQ,CAACY,EAAT,KAAgB,KAApB,EAA2B;AACzB,wBACE,oBAAC,IAAD,CACE;AADF;AAEE,MAAA,MAAM,EAAE,CAACJ,SAFX;AAGE,MAAA,KAAK,EAAE,CACL;AAAEK,QAAAA,OAAO,EAAEL,SAAS,GAAG,MAAH,GAAY;AAAhC,OADK,EAELM,MAAM,CAACC,SAFF,EAGLL,KAHK,CAHT;AAQE,MAAA,aAAa,EAAEF,SAAS,GAAG,MAAH,GAAY;AARtC,OASMG,IATN,GAWGF,QAXH,CADF;AAeD;;AAED,sBACE,oBAAC,IAAD;AACE,IAAA,KAAK,EAAE,CAACK,MAAM,CAACC,SAAR,EAAmBL,KAAnB,CADT,CAEE;AAFF;AAGE,IAAA,aAAa,EAAEF,SAAS,GAAG,MAAH,GAAY;AAHtC,kBAKE,oBAAC,IAAD;AACE,IAAA,WAAW,EAAE,KADf;AAEE,IAAA,qBAAqB,EACnB;AACA;AACAR,IAAAA,QAAQ,CAACY,EAAT,KAAgB,KAAhB,GAAwB,CAACJ,SAAzB,GAAqC,IALzC;AAOE,IAAA,aAAa,EAAEA,SAAS,GAAG,MAAH,GAAY,MAPtC;AAQE,IAAA,KAAK,EAAEA,SAAS,GAAGM,MAAM,CAACE,QAAV,GAAqBF,MAAM,CAACG;AAR9C,KAUGR,QAVH,CALF,CADF;AAoBD;AAED,MAAMK,MAAM,GAAGb,UAAU,CAACiB,MAAX,CAAkB;AAC/BH,EAAAA,SAAS,EAAE;AACTI,IAAAA,IAAI,EAAE;AADG,GADoB;AAI/BH,EAAAA,QAAQ,EAAE;AACRG,IAAAA,IAAI,EAAE;AADE,GAJqB;AAO/BF,EAAAA,QAAQ,EAAE;AACRE,IAAAA,IAAI,EAAE,CADE;AAERC,IAAAA,GAAG,EAAEd;AAFG;AAPqB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Platform, StyleSheet, View } from 'react-native';\nimport {\n  Screen,\n  screensEnabled,\n  // @ts-ignore\n  shouldUseActivityState,\n} from 'react-native-screens';\n\ntype Props = {\n  isVisible: boolean;\n  children: React.ReactNode;\n  enabled: boolean;\n  style?: any;\n};\n\nconst FAR_FAR_AWAY = 30000; // this should be big enough to move the whole view out of its container\n\nexport default function ResourceSavingScene({\n  isVisible,\n  children,\n  style,\n  ...rest\n}: Props) {\n  // react-native-screens is buggy on web\n  if (screensEnabled?.() && Platform.OS !== 'web') {\n    if (shouldUseActivityState) {\n      return (\n        // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n        <Screen activityState={isVisible ? 2 : 0} style={style} {...rest}>\n          {children}\n        </Screen>\n      );\n    } else {\n      return (\n        // @ts-expect-error: there was an `active` prop and no `activityState` in older version and stackPresentation was required\n        <Screen active={isVisible ? 1 : 0} style={style} {...rest}>\n          {children}\n        </Screen>\n      );\n    }\n  }\n\n  if (Platform.OS === 'web') {\n    return (\n      <View\n        // @ts-expect-error: hidden exists on web, but not in React Native\n        hidden={!isVisible}\n        style={[\n          { display: isVisible ? 'flex' : 'none' },\n          styles.container,\n          style,\n        ]}\n        pointerEvents={isVisible ? 'auto' : 'none'}\n        {...rest}\n      >\n        {children}\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={[styles.container, style]}\n      // box-none doesn't seem to work properly on Android\n      pointerEvents={isVisible ? 'auto' : 'none'}\n    >\n      <View\n        collapsable={false}\n        removeClippedSubviews={\n          // On iOS, set removeClippedSubviews to true only when not focused\n          // This is an workaround for a bug where the clipped view never re-appears\n          Platform.OS === 'ios' ? !isVisible : true\n        }\n        pointerEvents={isVisible ? 'auto' : 'none'}\n        style={isVisible ? styles.attached : styles.detached}\n      >\n        {children}\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  attached: {\n    flex: 1,\n  },\n  detached: {\n    flex: 1,\n    top: FAR_FAR_AWAY,\n  },\n});\n"]}